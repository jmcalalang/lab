# Copyright (C) F5 Networks, Inc. 2023
# All rights reserved.
#
# No part of the software may be reproduced or transmitted in any
# form or by any means, electronic or mechanical, for any purpose,
# without express written permission of F5 Networks, Inc.
#
# NGINX Management Suite - OpenID Connect configuration
# Created for v. 2.0
# (c) NGINX, Inc. 2021
#
# Each map block allows multiple values so that multiple IdPs can be supported,
# the $host variable is used as the default input parameter but can be changed.
#
# Adapted from: https://github.com/nginxinc/nginx-openid-connect/blob/main/openid_connect_configuration.conf
#
# NOTE: This requires NGINX Plus with the NJS module installed and enabled
# NOTE: The entries below need to be updated with values relevant to your environment and IdP
#
#       SERVER_FQDN is the Fully Qualified Domain Name of this server, e.g., nms.example.com
#
#       For more information about configuration and troubleshooting OIDC,
#       refer to the reference repository at https://github.com/nginxinc/nginx-openid-connect

# Enable when using OIDC with keycloak
#map $http_authorization $groups_claim {
#    default $jwt_claim_groups;
#}
#
#
#map $http_authorization $user_email {
#    "~^Bearer.*" '$jwt_clientId@$oidc_domain';
#    default $jwt_claim_email;
#}


# Enable when using OIDC with Azure AD
#map $http_authorization $groups_claim {
#    "~^Bearer.*" $jwt_claim_roles;
#    default $jwt_claim_groups;
#}
#
#
#map $jwt_audience $jwt_aud_client {
#    default  $jwt_audience;
#    ~^api://(.+)$ $1;
#}
#
#
#map $http_authorization $user_email {
#    "~^Bearer.*" '$jwt_aud_client@$oidc_domain';
#    default $jwt_claim_email;
#}


# Enable when using OIDC with okta
#map $http_authorization $groups_claim {
#    default $jwt_claim_groups;
#}
#
#
#map $http_authorization $user_email {
#    "~^Bearer.*" '$jwt_cid@$oidc_domain';
#    default $jwt_claim_email;
#}


map $host $oidc_authz_endpoint {
    SERVER_FQDN OIDC_AUTH_ENDPOINT;

#   default "https://login.microsoftonline.com/{tenant_key}/oauth2/v2.0/authorize";
    default "http://127.0.0.1:8080/auth/realms/master/protocol/openid-connect/auth";
}

map $host $oidc_token_endpoint {
    SERVER_FQDN OIDC_TOKEN_ENDPOINT;

#   default "https://login.microsoftonline.com/{tenant_key}/oauth2/v2.0/token";
    default "http://127.0.0.1:8080/auth/realms/master/protocol/openid-connect/token";
}

map $host $oidc_jwt_keyfile {
    SERVER_FQDN OIDC_KEYS_ENDPOINT;

#   default "https://login.microsoftonline.com/{tenant_key}/discovery/v2.0/keys";
    default "http://127.0.0.1:8080/auth/realms/master/protocol/openid-connect/certs";
}

map $host $cookie_auth_redir {
    default "/ui/launchpad";
}

map $host $oidc_client {
    SERVER_FQDN OIDC_CLIENT_ID;
    # replace with OIDC specific setting
    default "my-client-id";
}

map $host $oidc_pkce_enable {
    default 0;
}

map $host $oidc_client_secret {
    SERVER_FQDN OIDC_CLIENT_SECRET;
    # replace with OIDC specific setting
    default "my-not-very-secret-client-secret";
}

map $host $oidc_scopes {
    default "openid+profile+email+offline_access";
    # for okta IDP add groups scope
    # default "openid+profile+email+offline_access+groups";
}

map $host $oidc_domain {
    SERVER_FQDN OIDC_DOMAIN;
    # replace with OIDC specific setting
    default "my-oidc-app-domain";
}

map $host $oidc_logout_redirect {
    # Where to send browser after requesting /logout location. This can be
    # replaced with a custom logout page, or complete URL.
    default "/ui?logout=true"; # Built-in, simple logout page
}

map $host $oidc_client_credentials_flow_enable {
    # Both of Client Credentials Flow and AuthCode Flow are supported if enable.
    # Client Credentials Flow is executed if bearer token is in the API request
    # and this flag is enabled. Otherwise AuthCode Flow is executed.
    default 1;
}

map $host $oidc_hmac_key {
    SERVER_FQDN OIDC_HMAC_KEY;

    # This should be unique for every NGINX instance/cluster
    default "ChangeMe";
}

map $proto $oidc_cookie_flags {
    http  "Path=/; SameSite=lax;"; # For HTTP/plaintext testing
    https "Path=/; SameSite=lax; HttpOnly; Secure;"; # Production recommendation
}

map $http_x_forwarded_port $redirect_base {
    ""      $proto://$host:$server_port;
    default $proto://$host:$http_x_forwarded_port;
}

map $http_x_forwarded_proto $proto {
    ""      $scheme;
    default $http_x_forwarded_proto;
}

# ADVANCED CONFIGURATION BELOW THIS LINE
# Additional advanced configuration (server context) in openid_connect.conf

map $http_authorization $key_auth_token {
    "~^Bearer.*" $request_id;
    default $cookie_auth_token;
}

# JWK Set will be fetched from $oidc_jwks_uri and cached here - ensure writable by nginx user
proxy_cache_path /var/cache/nginx/jwk levels=1 keys_zone=jwk:64k max_size=1m;

# Change timeout values to at least the validity period of each token type
keyval_zone zone=oidc_tokens:1M state=/var/run/nms/nginx_oidc_tokens.json timeout=1h;
keyval_zone zone=refresh_tokens:1M state=/var/run/nms/nginx_refresh_tokens.json timeout=8h;
keyval_zone zone=oidc_pkce:128K timeout=90s; # Temporary storage for PKCE code verifier.

keyval $key_auth_token $session_jwt zone=oidc_tokens;   # Exchange cookie for JWT
keyval $key_auth_token $refresh_token zone=refresh_tokens; # Exchange cookie for refresh token
keyval $request_id $new_session zone=oidc_tokens; # For initial session creation
keyval $request_id $new_refresh zone=refresh_tokens; # ''
keyval $pkce_id $pkce_code_verifier zone=oidc_pkce;

auth_jwt_claim_set $jwt_claim_groups groups; # For optional claim groups
auth_jwt_claim_set $jwt_claim_roles roles; # For optional claim roles used by Azure AD
auth_jwt_claim_set $jwt_claim_sub sub; # Subject unique identifier
auth_jwt_claim_set $jwt_audience aud; # In case aud is an array
auth_jwt_claim_set $jwt_appid appid; # For optional claim appid used by Azure AD
auth_jwt_claim_set $jwt_clientId clientId; # For optional claim clientId used by keycloak
auth_jwt_claim_set $jwt_cid cid; # For optional claim cid used by okta
js_import oidc from /etc/nms/nginx/oidc/openid_connect.js;

# vim: syntax=nginx
