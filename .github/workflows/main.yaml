name: Lab Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# jobs for BIG-IP, F5XC, and NMS
jobs:

########################################################################################################

  BIG-IP-Available:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: cURL BIG-IP
        run: curl --max-time 10 -u ${{ secrets.BIG_IP_USERNAME }}:${{ secrets.BIG_IP_PASSWORD }} -X GET -k https://${{ secrets.BIG_IP_HOSTNAME }}/mgmt/tm/sys/ready/

  BIG-IP-Ansible:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [BIG-IP-Available]
    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install PIP
        run: sudo apt-get install -y python3-pip

      - name: Install apt-get dependencies
        run: sudo pip3 install jmespath

      - name: Setup ansible
        run: |
          ansible --version
          pipx inject ansible-core jmespath

      - name: Run ansible-lint
        # replace `main` with any valid ref, or tags like `v6`
        uses: ansible-community/ansible-lint-action@main
        # optional:
        with:
          path: "/home/runner/work/lab/lab/big-ip/playbooks/" # <-- only one value is allowed

      - name: Run Ansible Playbooks
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Optional, additional flags to pass to ansible-playbook
          options: |
            --extra-vars "@../defaults/main.yaml" 
            --extra-vars "BIGIPhost01=${{ secrets.BIG_IP_HOSTNAME }}" 
            --extra-vars "BIGIPadminUsername=${{ secrets.BIG_IP_USERNAME }}" 
            --extra-vars "BIGIPadminPassword=${{ secrets.BIG_IP_PASSWORD }}" 
          #  --verbose -vvvv
          # Required, playbook filepath
          playbook: "toolchain_declarations.yaml"
          # Optional, directory where playbooks live
          directory: "./big-ip/playbooks"

########################################################################################################

  F5XC-Resources-Available:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: cURL F5XC
        run: curl --max-time 10 --cert-type P12 --cert certs/${{ secrets.VES_HOSTNAME }}.api-creds.p12:${{ secrets.VES_P12_PASSWORD }} -X GET https://${{ secrets.VES_HOSTNAME }}/api/web/namespaces/j-calalang 

  F5XC-Terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [F5XC-Resources-Available]
    # Environment Variables
    env:
      VES_P12_PASSWORD: ${{ secrets.VES_P12_PASSWORD }}
      GODADDY_API_KEY: ${{ secrets.GODADDY_API_KEY }}
      GODADDY_API_SECRET: ${{ secrets.GODADDY_API_SECRET }}

    # Where are the Terraform files
    defaults:
      run:
        working-directory: distributed-cloud

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.2

      - name: Download Terraform State
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: f5xc-terraform-state
          # Optional, a directory where to extract artifact(s), defaults to the current directory
          path: distributed-cloud/
          # Optional, defaults to current repo
          check_artifacts: false
          # Optional, search for the last workflow run whose stored an artifact named as in `name` input
          # default false
          search_artifacts: true
          # Optional, run number from the workflow
          # run_number: 187
          # Optional, choose to skip unpacking the downloaded artifact(s)
          # default false
          # skip_unpack: false
          # Optional, choose how to exit the action if no artifact is found
          # can be one of:
          #  "fail", "warn", "ignore"
          # default fail
          if_no_artifact_found: fail

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init -force-copy

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve

      - name: Upload Terraform State
        uses: actions/upload-artifact@v3
        with:
          name: f5xc-terraform-state
          path: /home/runner/work/lab/lab/distributed-cloud/distributed-cloud/terraform.tfstate
          retention-days: 30

########################################################################################################

  NMS-Resources-Available:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: cURL F5XC
        run: curl --max-time 10 -u ${{ secrets.NMS_USERNAME }}:${{ secrets.NMS_PASSWORD }} -H "token:${{ secrets.NMS_TOKEN }}" -X GET https://${{ secrets.NMS_HOSTNAME }}/api/platform/v1/instances